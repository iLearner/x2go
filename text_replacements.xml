<?xml version="1.0" encoding="UTF-8"?>

<root>

<file name="mongo.tasks.main.yml">

    <replacement id="1">
        <old><![CDATA[
- name: add the mongodb signing key
  apt_key: >
    id=7F0CEB10
    url={{ MONGODB_APT_KEY }}
    state=present

- name: add the mongodb repo to the sources list
  apt_repository_1.8: >
    repo='{{ MONGODB_REPO }}'
    state=present
    validate_certs=no

- name: install mongo server and recommends
  apt: >
    pkg=mongodb-org={{ mongo_version }}
    state=present install_recommends=yes
    force=yes update_cache=yes
]]></old>
        <new><![CDATA[]]></new>
    </replacement>

</file>

<file name="oraclejdk.defaults.main.yml">

    <replacement id="1">
        <old>oraclejdk_version: "7u51"</old>
        <new>oraclejdk_version: "7u60"</new>
    </replacement>

    <replacement id="2">
        <old>oraclejdk_base: "jdk1.7.0_51"</old>
        <new>oraclejdk_base: "jdk1.7.0_60"</new>
    </replacement>

    <replacement id="3">
        <old>oraclejdk_build: "b13"</old>
        <new>oraclejdk_build: "b19"</new>
    </replacement>

    <replacement id="4">
        <old>oraclejdk_arch: "x64"</old>
        <new>oraclejdk_arch: "arm"</new>
    </replacement>

    <replacement id="5">
        <old>oraclejdk_file: "jdk-{{ oraclejdk_version }}-{{ oraclejdk_platform }}-{{ oraclejdk_arch }}.tar.gz"</old>
        <new>oraclejdk_file: "jdk-{{ oraclejdk_version }}-{{ oraclejdk_platform }}-{{ oraclejdk_arch }}-vfp-hflt.tar.gz"</new>
    </replacement>

</file>

<file name="oraclejdk.tasks.main.yml">

    <replacement id="1">
        <old><![CDATA[
- name: update alternatives javaws
  shell: >
    update-alternatives --install "/usr/bin/javaws" "javaws" "/usr/lib/jvm/{{ oraclejdk_base }}/bin/javaws" 1
  register: update_alt
  changed_when: update_alt.stdout != ""
]]></old>
        <new><![CDATA[]]></new>
    </replacement>

</file>

<file name="edxapp.tasks.python_sandbox_env.yml">

    <replacement id="1">
        <old><![CDATA[
- name: code sandbox | (bootstrap) load code sandbox profile
  command: apparmor_parser -r /etc/apparmor.d/code.sandbox
  notify:
  - "restart edxapp"
  - "restart edxapp_workers"
  tags:
  - edxapp-sandbox
]]></old>
        <new><![CDATA[
- name: code sandbox | (bootstrap) load code sandbox profile
  command: apparmor_parser -r /etc/apparmor.d/code.sandbox
  notify:
  - "restart edxapp"
  - "restart edxapp_workers"
  tags:
  - edxapp-sandbox
  ignore_errors: yes
]]></new>
    </replacement>

    <replacement id="2">
        <old><![CDATA[
- name: code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  notify:
  - "restart edxapp"
  - "restart edxapp_workers"
  tags:
  - edxapp-sandbox
]]></old>
        <new><![CDATA[
- name: code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  notify:
  - "restart edxapp"
  - "restart edxapp_workers"
  tags:
  - edxapp-sandbox
  ignore_errors: yes
]]></new>
    </replacement>

    <replacement id="3">
        <old>command: update-alternatives --set libblas.so.3gf /usr/lib/libblas/libblas.so.3gf</old>
        <new>command: update-alternatives --set libblas.so.3 /usr/lib/libblas/libblas.so.3</new>
    </replacement>

    <replacement id="4">
        <old>command: update-alternatives --set liblapack.so.3gf /usr/lib/lapack/liblapack.so.3gf</old>
        <new>command: update-alternatives --set liblapack.so.3 /usr/lib/lapack/liblapack.so.3</new>
    </replacement>

</file>

<file name="edxapp.tasks.deploy.yml">

    <replacement id="1">
        <old><![CDATA[
- name: code sandbox | put sandbox apparmor profile in complain mode
  command: /usr/sbin/aa-complain /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  tags:
  - edxapp-sandbox
]]></old>
        <new><![CDATA[
- name: code sandbox | put sandbox apparmor profile in complain mode
  command: /usr/sbin/aa-complain /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  tags:
  - edxapp-sandbox
  ignore_errors: yes
]]></new>
    </replacement>

    <replacement id="2">
        <old><![CDATA[
- name: code sandbox | put code sandbox into aa-enforce or aa-complain mode, depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  tags:
  - edxapp-sandbox
]]></old>
        <new><![CDATA[
- name: code sandbox | put code sandbox into aa-enforce or aa-complain mode, depending on EDXAPP_SANDBOX_ENFORCE
  command: /usr/sbin/{{ edxapp_aa_command }} /etc/apparmor.d/code.sandbox
  when: EDXAPP_PYTHON_SANDBOX
  tags:
  - edxapp-sandbox
  ignore_errors: yes
]]></new>
    </replacement>

</file>

</root>
